#include <stdio.h>
#define SIZE 10 
void multiplyMatrix(int mat1[][SIZE], int mat2[][SIZE], int res[][SIZE], int rows1, int cols1, int cols2) {
    int i, j, k;
    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols2; j++) {
            res[i][j] = 0;
        }
    }
    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols2; j++) {
            for (k = 0; k < cols1; k++) {
                res[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}
void displayMatrix(int mat[][SIZE], int rows, int cols) {
    int i, j;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }
}
int main() {
    int mat1[SIZE][SIZE], mat2[SIZE][SIZE], res[SIZE][SIZE];
    int rows1, cols1, rows2, cols2, i, j;
    printf("Enter number of rows and columns for first matrix: ");
    scanf("%d %d", &rows1, &cols1);
    printf("Enter elements of first matrix:\n");
    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols1; j++) {
            scanf("%d", &mat1[i][j]);
        }
    }
    printf("Enter number of rows and columns for second matrix: ");
    scanf("%d %d", &rows2, &cols2);
    printf("Enter elements of second matrix:\n");
    for (i = 0; i < rows2; i++) {
        for (j = 0; j < cols2; j++) {
            scanf("%d", &mat2[i][j]);
        }
    }
    if (cols1 != rows2) {
        printf("Matrices cannot be multiplied!\n");
        return 0;
    }
    multiplyMatrix(mat1, mat2, res, rows1, cols1, cols2);
    printf("Resultant matrix:\n");
    displayMatrix(res, rows1, cols2);
    return 0;
}
